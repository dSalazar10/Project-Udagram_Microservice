{
	"info": {
		"_postman_id": "9d591160-5ba9-440a-8629-ad193550bb90",
		"name": "RestAPI.postman_collection.jsontest",
		"description": "Public:\n- test getting all the images in the S3 bucket\n- test getting a specific image\n- test creating a user with valid credentials\n- test creating a user with invalid credentials\n- test loggin in with valid credentials\n- test loggin in with invalid credentials\n\nUnauthorized:\n- test posting an image with invalid credentials\n\nAuthorized: \n- test posting an image with valid credentials and a malformed payload\n- test posting an image with valid credentials and valid payload",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Local Host",
			"item": [
				{
					"name": "Public",
					"item": [
						{
							"name": "/api/v0/feed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad01629-c164-41ef-9d19-0a5fd13274af",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"The count is equal to the number of items rx\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
											"});",
											"",
											"pm.test(\"Response time is less than 600ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(600);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v0/feed",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v0",
										"feed"
									]
								},
								"description": "Get all the items in the feed"
							},
							"response": []
						},
						{
							"name": "/api/v0/feed Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad01629-c164-41ef-9d19-0a5fd13274af",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"The count is equal to the number of items rx\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
											"});",
											"",
											"pm.test(\"Response time is less than 600ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(600);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v0/feed",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v0",
										"feed"
									]
								},
								"description": "Get all the items in the feed"
							},
							"response": []
						},
						{
							"name": "/api/v0/feed/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad01629-c164-41ef-9d19-0a5fd13274af",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"A single item is returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.not.eql(null);",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v0/feed/:id",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v0",
										"feed",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								},
								"description": "Request a specific feed item"
							},
							"response": [
								{
									"name": "/api/v0/feed/:id",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/api/v0/feed/:id?",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v0",
												"feed",
												":id"
											],
											"query": [
												{
													"key": "id",
													"value": "4",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "3"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "133"
										},
										{
											"key": "ETag",
											"value": "W/\"85-gic7UchUXbyxmSqNsq7nx4+Eaas\""
										},
										{
											"key": "Date",
											"value": "Tue, 26 Mar 2019 15:07:32 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 3,\n    \"caption\": \"hello0.5278862272947393\",\n    \"url\": null,\n    \"createdAt\": \"2019-03-26T14:16:58.442Z\",\n    \"updatedAt\": \"2019-03-26T14:16:58.443Z\"\n}"
								}
							]
						},
						{
							"name": "valid /api/v0/user/auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fa0ec55-4fb1-4eda-a7a3-08af62324ede",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"A single item is returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.not.eql(null);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\":\"hello@world.com\",\n\t\"password\":\"fancypass\"\n}"
								},
								"url": {
									"raw": "{{host}}/api/v0/users/auth",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v0",
										"users",
										"auth"
									]
								},
								"description": "try to authorize using valid registration"
							},
							"response": []
						},
						{
							"name": "invalid /api/v0/user/auth ",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3737edc-f79e-4823-b2c5-e84e6359e173",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"auth is false and a message is included in the error body\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.not.eql(null);",
											"    pm.expect(jsonData.message).to.not.eql(null)",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"fancypass\"\n}"
								},
								"url": {
									"raw": "{{host}}/api/v0/users/auth",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v0",
										"users",
										"auth"
									]
								},
								"description": "Try to authorize using invalid registration"
							},
							"response": []
						},
						{
							"name": "valid /api/v0/user/auth/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5524b249-cd4d-4e75-91c4-b2f690d53d44",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"body includes an email and token\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.auth).to.eql(true);",
											"    pm.expect(jsonData.user).to.not.eql(null);",
											"    pm.expect(jsonData.token).to.not.eql(null)",
											"    ",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test(\"Response time is less than 500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\":\"hello@world.com\",\n\t\"password\":\"fancypass\"\n}"
								},
								"url": {
									"raw": "{{host}}/api/v0/users/auth/login",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v0",
										"users",
										"auth",
										"login"
									]
								},
								"description": "Attempt to login using a valid email and password"
							},
							"response": []
						},
						{
							"name": "invalid /api/v0/user/auth/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "41cd51df-9472-4d8d-9177-b4f54d6a8530",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"auth is false and a message is included in the error body\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.not.eql(null);",
											"    pm.expect(jsonData.message).to.not.eql(null)",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "fancypass",
											"type": "string"
										},
										{
											"key": "username",
											"value": "hello@world.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{host}}/api/v0/users/auth/login",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v0",
										"users",
										"auth",
										"login"
									]
								},
								"description": "Attempt to login using an invalid email and password"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Unauthorized",
					"item": [
						{
							"name": "unauthorized /api/v0/feed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad01629-c164-41ef-9d19-0a5fd13274af",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caption\": \"Hello\",\n    \"url\": \"test.jpg\"\n}"
								},
								"url": {
									"raw": "{{host}}/api/v0/feed",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v0",
										"feed"
									]
								},
								"description": "Attempt to post a new item to the feed with a malformed payload"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Authorized",
					"item": [
						{
							"name": "authorized-valid /api/v0/feed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad01629-c164-41ef-9d19-0a5fd13274af",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"The post returns a new item with an id\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.not.eql(null);",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhlbGxvQHdvcmxkLmNvbSIsImlhdCI6MTU2MjUzODA4Nn0.15mHrRMuFTzvwst4dU7bE8ya71QO-CuRsXgHT7v4b4k",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caption\": \"Hello\",\n    \"url\": \"xander0.jpg\"\n}"
								},
								"url": {
									"raw": "{{host}}/api/v0/feed",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v0",
										"feed"
									]
								},
								"description": "Post a new item to the feed"
							},
							"response": []
						},
						{
							"name": "authorized-invalid /api/v0/feed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad01629-c164-41ef-9d19-0a5fd13274af",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"body includes a message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.not.eql(null);",
											"});",
											"",
											"pm.test(\"Response time is less than 500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "hello@world.com",
											"type": "string"
										},
										{
											"key": "password",
											"value": "fancypass",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{host}}/api/v0/feed",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v0",
										"feed"
									]
								},
								"description": "Post a new item to the feed with a malformed payload"
							},
							"response": []
						},
						{
							"name": "authorized-valid /signed-url",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhlbGxvQHdvcmxkLmNvbSIsImlhdCI6MTU2MjY1MjgzMH0.HF7KHep4hG-dtMUoqwqGmdUWkrOaUtT17UjeXao_3Io",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v0/feed/signed-url/test.jpg",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v0",
										"feed",
										"signed-url",
										"test.jpg"
									]
								},
								"description": "Request for a signed URL"
							},
							"response": []
						},
						{
							"name": "/feed/filter/:id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhlbGxvQHdvcmxkLmNvbSIsImlhdCI6MTU2MjY1MTM4NX0.zl0Wnq4hUyfFuS6ufC7uYW1IcZ3-aeIXS-pYtdkCZZg",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v0/feed/filter/:id",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v0",
										"feed",
										"filter",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "10"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "65e7c108-0985-4ca7-9613-0898f005cf76",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cf28f76e-ffbb-4199-b636-1c080a86e465",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Cloud Host",
			"item": [
				{
					"name": "Public Cloud",
					"item": [
						{
							"name": "/api/v0/feed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad01629-c164-41ef-9d19-0a5fd13274af",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"The count is equal to the number of items rx\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
											"});",
											"",
											"pm.test(\"Response time is less than 600ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(600);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{eb_host}}/api/v0/feed",
									"host": [
										"{{eb_host}}"
									],
									"path": [
										"api",
										"v0",
										"feed"
									]
								},
								"description": "Get all the items in the feed"
							},
							"response": []
						},
						{
							"name": "/api/v0/feed/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad01629-c164-41ef-9d19-0a5fd13274af",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"A single item is returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.not.eql(null);",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{eb_host}}/api/v0/feed/:id",
									"host": [
										"{{eb_host}}"
									],
									"path": [
										"api",
										"v0",
										"feed",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "67"
										}
									]
								},
								"description": "Request a specific feed item"
							},
							"response": [
								{
									"name": "/api/v0/feed/:id",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/api/v0/feed/:id?",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v0",
												"feed",
												":id"
											],
											"query": [
												{
													"key": "id",
													"value": "4",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "3"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "133"
										},
										{
											"key": "ETag",
											"value": "W/\"85-gic7UchUXbyxmSqNsq7nx4+Eaas\""
										},
										{
											"key": "Date",
											"value": "Tue, 26 Mar 2019 15:07:32 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 3,\n    \"caption\": \"hello0.5278862272947393\",\n    \"url\": null,\n    \"createdAt\": \"2019-03-26T14:16:58.442Z\",\n    \"updatedAt\": \"2019-03-26T14:16:58.443Z\"\n}"
								}
							]
						},
						{
							"name": "valid /api/v0/user/auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fa0ec55-4fb1-4eda-a7a3-08af62324ede",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"A single item is returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.not.eql(null);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\":\"hello@world.com\",\n\t\"password\":\"fancypass\"\n}"
								},
								"url": {
									"raw": "{{eb_host}}/api/v0/users/auth",
									"host": [
										"{{eb_host}}"
									],
									"path": [
										"api",
										"v0",
										"users",
										"auth"
									]
								},
								"description": "try to authorize using valid registration"
							},
							"response": []
						},
						{
							"name": "invalid /api/v0/user/auth ",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3737edc-f79e-4823-b2c5-e84e6359e173",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"auth is false and a message is included in the error body\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.not.eql(null);",
											"    pm.expect(jsonData.message).to.not.eql(null)",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"fancypass\"\n}"
								},
								"url": {
									"raw": "{{eb_host}}/api/v0/users/auth",
									"host": [
										"{{eb_host}}"
									],
									"path": [
										"api",
										"v0",
										"users",
										"auth"
									]
								},
								"description": "Try to authorize using invalid registration"
							},
							"response": []
						},
						{
							"name": "valid /api/v0/user/auth/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5524b249-cd4d-4e75-91c4-b2f690d53d44",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"body includes an email and token\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.auth).to.eql(true);",
											"    pm.expect(jsonData.user).to.not.eql(null);",
											"    pm.expect(jsonData.token).to.not.eql(null)",
											"    ",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});",
											"",
											"pm.test(\"Response time is less than 500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "fancypass",
											"type": "string"
										},
										{
											"key": "username",
											"value": "hello@world.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\":\"hello@world.com\",\n\t\"password\":\"fancypass\"\n}"
								},
								"url": {
									"raw": "{{eb_host}}/api/v0/users/auth/login",
									"host": [
										"{{eb_host}}"
									],
									"path": [
										"api",
										"v0",
										"users",
										"auth",
										"login"
									]
								},
								"description": "Attempt to login using a valid email and password"
							},
							"response": []
						},
						{
							"name": "invalid /api/v0/user/auth/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "41cd51df-9472-4d8d-9177-b4f54d6a8530",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"auth is false and a message is included in the error body\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.not.eql(null);",
											"    pm.expect(jsonData.message).to.not.eql(null)",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "fancypass",
											"type": "string"
										},
										{
											"key": "username",
											"value": "hello@world.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{eb_host}}/api/v0/users/auth/login",
									"host": [
										"{{eb_host}}"
									],
									"path": [
										"api",
										"v0",
										"users",
										"auth",
										"login"
									]
								},
								"description": "Attempt to login using an invalid email and password"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Authorized Cloud",
					"item": [
						{
							"name": "authorized-valid /api/v0/feed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad01629-c164-41ef-9d19-0a5fd13274af",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"The post returns a new item with an id\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.not.eql(null);",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhlbGxvQHdvcmxkLmNvbSIsImlhdCI6MTU2MjM5MzYwMn0.wQeAQN-y1IS8Zt7v_HettNiEOyK4OMmKJxT54bR6n0U",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caption\": \"Hello\",\n    \"url\": \"test.jpg\"\n}"
								},
								"url": {
									"raw": "{{eb_host}}/api/v0/feed",
									"host": [
										"{{eb_host}}"
									],
									"path": [
										"api",
										"v0",
										"feed"
									]
								},
								"description": "Post a new item to the feed"
							},
							"response": []
						},
						{
							"name": "authorized-invalid /api/v0/feed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad01629-c164-41ef-9d19-0a5fd13274af",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"body includes a message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.not.eql(null);",
											"});",
											"",
											"pm.test(\"Response time is less than 500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "hello@world.com",
											"type": "string"
										},
										{
											"key": "password",
											"value": "fancypass",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{eb_host}}/api/v0/feed",
									"host": [
										"{{eb_host}}"
									],
									"path": [
										"api",
										"v0",
										"feed"
									]
								},
								"description": "Post a new item to the feed with a malformed payload"
							},
							"response": []
						},
						{
							"name": "authorized-valid /signed-url",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27932324-c9fd-4f30-a294-5b1e66f9fee3",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhlbGxvQHdvcmxkLmNvbSIsImlhdCI6MTU2MjM5MzYwMn0.wQeAQN-y1IS8Zt7v_HettNiEOyK4OMmKJxT54bR6n0U",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{eb_host}}/api/v0/feed/signed-url/test.jpg",
									"host": [
										"{{eb_host}}"
									],
									"path": [
										"api",
										"v0",
										"feed",
										"signed-url",
										"test.jpg"
									]
								},
								"description": "Request for a signed URL"
							},
							"response": []
						},
						{
							"name": "/feed/filter/:id Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhlbGxvQHdvcmxkLmNvbSIsImlhdCI6MTU2MjY1MTM4NX0.zl0Wnq4hUyfFuS6ufC7uYW1IcZ3-aeIXS-pYtdkCZZg",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{eb_host}}/api/v0/feed/filter/:id",
									"host": [
										"{{eb_host}}"
									],
									"path": [
										"api",
										"v0",
										"feed",
										"filter",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "10"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "65e7c108-0985-4ca7-9613-0898f005cf76",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cf28f76e-ffbb-4199-b636-1c080a86e465",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Unauthorized Cloud",
					"item": [
						{
							"name": "unauthorized /api/v0/feed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad01629-c164-41ef-9d19-0a5fd13274af",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caption\": \"Hello\",\n    \"url\": \"test.jpg\"\n}"
								},
								"url": {
									"raw": "{{eb_host}}/api/v0/feed",
									"host": [
										"{{eb_host}}"
									],
									"path": [
										"api",
										"v0",
										"feed"
									]
								},
								"description": "Attempt to post a new item to the feed with a malformed payload"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhlbGxvQHdvcmxkLmNvbSIsImlhdCI6MTU2MjM5MzUwOH0.hetWJDfO2sp6HhN0xPemiusVCluM1CYRCfeLSETpbIg",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "bc5d9c7a-7a6b-49ed-af16-206e17e8732f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a7cb0174-2461-42e2-979e-1b5922eea0fe",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "b019c401-4840-42de-96ed-be7ee3a88678",
			"key": "host",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"id": "8cd0fb03-e00b-4735-add3-414252a551a5",
			"key": "eb_host",
			"value": "http://udagram-c2-restapi-dev.us-east-2.elasticbeanstalk.com",
			"type": "string"
		}
	]
}